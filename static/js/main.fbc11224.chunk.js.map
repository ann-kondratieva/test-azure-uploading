{"version":3,"sources":["api/actions/index.js","api/reducers/index.js","modules/home/pages/Home/actions/index.js","modules/home/pages/Home/reducers/uploadedFiles.js","modules/home/pages/Home/reducers/index.js","modules/home/reducers/index.js","rootReducer.js","api/index.js","api/calls/organizations.js","api/helpers/index.js","api/constants/index.js","api/sagas/index.js","modules/home/pages/Home/sagas/index.js","modules/home/sagas/index.js","rootSaga.js","configureStore.js","navigation/constants/index.js","modules/home/pages/Home/components/Home/index.js","modules/home/pages/Home/components/Home/styles.js","modules/home/pages/Home/selectors/index.js","modules/home/pages/Home/containers/HomeContainer.js","navigation/index.js","components/App/theme.js","components/App/index.js","index.js"],"names":["startLoading","createAction","stopLoading","handleActions","apiActions","state","action","payload","uploadFiles","setUploadedFiles","updatedFileUploads","map","item","fileUpload","find","upload","file","status","reducer","combineReducers","uploadedFiles","homePage","signInTransform","createTransform","key","omit","whitelist","signUpTransform","rootPersistConfig","storage","transforms","rootReducer","history","persistCombineReducers","router","connectRouter","apiCalls","home","API_PREFIX","process","API_VERSION","config","baseURL","timeout","headers","Accept","Pragma","params","apiService","axios","create","getOrganizationsRequest","api","get","isRequestAction","type","endsWith","isResponseAction","sendRequest","receiveResponse","put","request","camelCase","Error","requestData","call","response","replace","data","console","log","actionType","watchRequestSaga","all","takeEvery","onUploadFiles","watchRequest","containerClient","BlobServiceClient","getContainerClient","uploadFilesConcurrently","files","eventChannel","emitter","forEach","fileToUpload","blockBlobClient","getBlockBlobClient","name","downloadUrl","url","abortController","AbortController","Promise","resolve","blockSize","size","uploadBrowserData","abortSignal","signal","uploadFileAzure","then","uploadFile","length","END","filesEvents","take","authSaga","homeSaga","rootSaga","apiCallsSaga","createBrowserHistory","routerMiddleware","sagaMiddleware","createSagaMiddleware","Routes","withStyles","theme","input","display","width","backgroundColor","button","marginTop","marginBottom","color","classes","uploadToAzure12","uploadToAzure10","handleAzure10FileChange","azure10Time","uploads10","handleAzure12FileChange","azure12Time","filesUploadedWithRedux","uploads12","uploadsAws","uploadToAws","handleAwsFileChange","awsTime","onSubmit","onChange","className","multiple","Button","variant","upload12","href","getUploadedFiles","blobService","azure","createBlobService","blobServiceClient12","S3_CONFIG","bucketName","dirName","region","accessKeyId","secretAccessKey","HomeContainer","dispatch","useDispatch","useSelector","useState","azure10FilesToUpload","setAzure10FilesToApload","setAzure10Time","setUploads10","interval1StartTime","azure12FilesToUpload","setAzure12FilesToApload","setAzure12Time","setUploads12","interval2StartTime","awsFilesToUpload","setAwsFilesToApload","setAwsTime","setUploadsAws","intervalAwsStartTime","e","preventDefault","Date","now","interval1","setInterval","Array","from","createBlockBlobFromBrowserFile","error","result","newUploads","link","container","clearInterval","target","interval2","blobName","catch","prototype","slice","intervalAws","ReactS3","uploads","err","AppRoutes","path","component","Home","createMuiTheme","palette","primary","main","dark","secondary","grey","light","typography","fontFamily","MuiButton","store","createStore","composeWithDevTools","applyMiddleware","run","configureStore","persistor","persistStore","App","ThemeProvider","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbc11224.chunk.js","sourcesContent":["import { createAction } from 'redux-actions';\r\n\r\nexport const startLoading = createAction('START_LOADING');\r\nexport const stopLoading = createAction('STOP_LOADING');\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport * as apiActions from '../actions';\r\n\r\nconst defaultState = {};\r\n\r\nexport default handleActions(\r\n  {\r\n    [apiActions.startLoading]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: true,\r\n    }),\r\n    [apiActions.stopLoading]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  defaultState,\r\n);\r\n","import { createAction } from 'redux-actions';\r\n\r\nexport const uploadFiles = createAction('UPLOAD_FILES');\r\nexport const setUploadedFiles = createAction('SET_UPLOADED_FILES');\r\n","import { handleActions } from 'redux-actions';\r\n\r\nimport { setUploadedFiles, uploadFiles } from '../actions';\r\n\r\nconst defaultState = [];\r\n\r\nexport default handleActions(\r\n  {\r\n    [setUploadedFiles](state, action) {\r\n      const updatedFileUploads = action.payload;\r\n\r\n      const newState = state.map((item) => {\r\n        const fileUpload = updatedFileUploads.find((upload) => upload.file === item.file);\r\n\r\n        return fileUpload ? { ...item, ...fileUpload } : item;\r\n      });\r\n\r\n      return newState;\r\n    },\r\n    [uploadFiles](state, action) {\r\n      const filesToUpload = action.payload;\r\n\r\n      const newState = filesToUpload.map((item) => ({\r\n        file: item,\r\n        status: 'Pending',\r\n      }));\r\n\r\n      return newState;\r\n    },\r\n  },\r\n  defaultState,\r\n);\r\n","import { combineReducers } from 'redux';\r\n\r\nimport uploadedFiles from './uploadedFiles';\r\n\r\nconst reducer = combineReducers({\r\n  uploadedFiles,\r\n});\r\n\r\nexport default reducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport homePage from '../pages/Home/reducers';\r\n\r\nconst reducer = combineReducers({\r\n  homePage,\r\n});\r\n\r\nexport default reducer;\r\n","import storage from 'redux-persist/lib/storage';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { persistCombineReducers, createTransform } from 'redux-persist';\r\nimport omit from 'lodash/omit';\r\n\r\nimport apiCalls from 'api/reducers';\r\nimport home from 'modules/home/reducers';\r\n\r\nconst signInTransform = createTransform(\r\n  (state, key) => state,\r\n  (state, key) => omit(state, 'signIn'),\r\n  { whitelist: ['auth'] },\r\n);\r\n\r\nconst signUpTransform = createTransform(\r\n  (state, key) => state,\r\n  (state, key) => omit(state, 'signUp'),\r\n  { whitelist: ['auth'] },\r\n);\r\n\r\nconst rootPersistConfig = {\r\n  key: 'authData',\r\n  storage: storage,\r\n  whitelist: ['auth'],\r\n  transforms: [signInTransform, signUpTransform],\r\n};\r\n\r\nconst rootReducer = (history) =>\r\n  persistCombineReducers(rootPersistConfig, {\r\n    router: connectRouter(history),\r\n    apiCalls,\r\n    home,\r\n  });\r\n\r\nexport default rootReducer;\r\n","import axios from 'axios';\r\n\r\nlet domain = '';\r\nconst API_PREFIX = process.env.API_PREFIX || 'api';\r\nconst API_VERSION = process.env.API_VERSION || 'v1';\r\n\r\nif (process.env.NODE_ENV === 'production') {\r\n  domain = `/${API_PREFIX}/${API_VERSION}/`;\r\n} else {\r\n  domain = `http://localhost:3001/${API_PREFIX}/${API_VERSION}/`;\r\n}\r\n\r\nlet config = {\r\n  baseURL: domain,\r\n  timeout: 100000,\r\n  headers: {\r\n    Accept: 'application/json',\r\n    'Content-Type': 'application/json',\r\n    Pragma: 'no-cache',\r\n  },\r\n  params: {},\r\n};\r\n\r\nconst apiService = axios.create(config);\r\n\r\nexport default apiService;\r\n","import api from '../index';\r\n\r\nexport const getOrganizationsRequest = ({ headers, ...params }) => {\r\n  return api.get('/organizations', { params, headers });\r\n};\r\n","import { REQUEST_POSTFIX, SUCCESS_POSTFIX, ERROR_POSTFIX } from '../constants';\r\n\r\nexport const isRequestAction = (action) => {\r\n  return action.type.endsWith(REQUEST_POSTFIX);\r\n};\r\n\r\nexport const isResponseAction = (action) => {\r\n  return action.type.endsWith(SUCCESS_POSTFIX) || action.type.endsWith(ERROR_POSTFIX);\r\n};\r\n","export const REQUEST_POSTFIX = '_REQUEST';\r\nexport const SUCCESS_POSTFIX = '_SUCCESS';\r\nexport const ERROR_POSTFIX = '_FAIL';\r\n","import { call, put, all, takeEvery } from 'redux-saga/effects';\r\nimport camelCase from 'lodash/camelCase';\r\n\r\nimport * as apiCalls from '../calls';\r\n\r\nimport { isRequestAction, isResponseAction } from '../helpers';\r\nimport { startLoading, stopLoading } from '../actions';\r\nimport { REQUEST_POSTFIX, SUCCESS_POSTFIX, ERROR_POSTFIX } from '../constants';\r\n\r\nfunction* sendRequest(action) {\r\n  yield put(startLoading(action.type));\r\n  const request = apiCalls[camelCase(action.type)];\r\n  if (!request) {\r\n    throw new Error(`no api method for action ${action.type}`);\r\n  }\r\n  try {\r\n    const requestData = {\r\n      ...action.payload,\r\n    };\r\n    const response = yield call(request, requestData);\r\n    yield put({\r\n      type: action.type.replace(REQUEST_POSTFIX, SUCCESS_POSTFIX),\r\n      response: response ? response.data : {},\r\n      payload: action.payload,\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction* receiveResponse(action) {\r\n  const actionType = action.type\r\n    .replace(SUCCESS_POSTFIX, REQUEST_POSTFIX)\r\n    .replace(ERROR_POSTFIX, REQUEST_POSTFIX);\r\n  yield put(stopLoading(actionType));\r\n}\r\n\r\nconst watchRequestSaga = function*() {\r\n  yield all([\r\n    takeEvery(isRequestAction, sendRequest),\r\n    takeEvery(isResponseAction, receiveResponse),\r\n  ]);\r\n};\r\n\r\nexport default watchRequestSaga;\r\n","import { all, takeEvery, call, put, take } from 'redux-saga/effects';\r\nimport { eventChannel, END } from 'redux-saga';\r\nimport { BlobServiceClient } from '@azure/storage-blob';\r\nimport { AbortController } from '@azure/abort-controller';\r\n\r\nimport { uploadFiles, setUploadedFiles } from '../actions';\r\n\r\nconst AZURE_ACCOUNT = 'testtabeebblob';\r\nconst sas =\r\n  '?sv=2019-02-02&ss=b&srt=sco&sp=rwdlac&se=2020-06-08T18:01:44Z&st=2020-04-08T10:01:44Z&spr=https,http&sig=19%2BD2fnViaf0CRmEMRw4gHwpIsgKugpBPC7PfBA2sz4%3D';\r\n\r\n//azure 12\r\nconst blobServiceClient12 = new BlobServiceClient(\r\n  `https://${AZURE_ACCOUNT}.blob.core.windows.net${sas}`,\r\n);\r\nconst containerClient = blobServiceClient12.getContainerClient('testcontainer');\r\n\r\nfunction uploadFileAzure({ blockBlobClient, file, abortController }) {\r\n  const blockSize = file.size;\r\n  return blockBlobClient.uploadBrowserData(file, {\r\n    blockSize,\r\n    abortSignal: abortController.signal,\r\n  });\r\n}\r\n\r\nconst uploadFile = ({ file, containerClient }) => {\r\n  let fileToUpload = file;\r\n  const blockBlobClient = containerClient.getBlockBlobClient(file.name);\r\n  const downloadUrl = blockBlobClient.url;\r\n  const abortController = new AbortController();\r\n  console.log(file.name);\r\n  return new Promise(function(resolve) {\r\n    return uploadFileAzure({ blockBlobClient, file: fileToUpload, abortController }).then(() => {\r\n      resolve(downloadUrl);\r\n    });\r\n  });\r\n};\r\n\r\nfunction uploadFilesConcurrently({ files, containerClient }) {\r\n  return eventChannel((emitter) => {\r\n    let uploadedFiles = 0;\r\n    files.forEach((file) => {\r\n      uploadFile({\r\n        file,\r\n        containerClient,\r\n      }).then(function onUpload(downloadUrl) {\r\n        emitter({ file, downloadUrl });\r\n        uploadedFiles++;\r\n        console.log(uploadedFiles, downloadUrl);\r\n        if (uploadedFiles === files.length) {\r\n          emitter(END);\r\n        }\r\n      });\r\n    });\r\n    return () => {};\r\n  });\r\n}\r\n\r\nfunction* onUploadFiles({ payload }) {\r\n  const files = payload;\r\n  const filesEvents = yield call(uploadFilesConcurrently, {\r\n    files,\r\n    containerClient,\r\n  });\r\n  try {\r\n    while (true) {\r\n      let { file, downloadUrl } = yield take(filesEvents);\r\n\r\n      yield put(setUploadedFiles([{ file, url: downloadUrl, status: 'Uploaded' }]));\r\n    }\r\n  } finally {\r\n  }\r\n}\r\n\r\nexport default function* watchRequest() {\r\n  yield all([takeEvery(uploadFiles, onUploadFiles)]);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport homeSaga from '../pages/Home/sagas';\r\n\r\nfunction* authSaga() {\r\n  yield all([homeSaga()]);\r\n}\r\n\r\nexport default authSaga;\r\n","import { all } from 'redux-saga/effects';\r\n\r\nimport apiCallsSaga from 'api/sagas';\r\nimport homeSaga from 'modules/home/sagas';\r\n\r\nfunction* rootSaga() {\r\n  yield all([apiCallsSaga(), homeSaga()]);\r\n}\r\n\r\nexport default rootSaga;\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\n\r\nimport rootReducer from './rootReducer';\r\nimport rootSaga from './rootSaga';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst router = routerMiddleware(history);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport function configureStore() {\r\n  let store = createStore(\r\n    rootReducer(history),\r\n    composeWithDevTools(applyMiddleware(sagaMiddleware, router)),\r\n  );\r\n  if (process.env.NODE_ENV === 'production') {\r\n    store = createStore(rootReducer(history), applyMiddleware(sagaMiddleware, router));\r\n  }\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n","export const Routes = {\r\n  AUTH: '/auth',\r\n  SIGN_IN: '/auth/sign-in',\r\n  SIGN_UP: '/auth/sign-up',\r\n  RESET_PASSWORD: '/auth/reset-password',\r\n  FORGOT_PASSWORD: '/auth/forgot-password',\r\n  HOME: '/',\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport styles from './styles';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst Home = ({\r\n  classes,\r\n  uploadToAzure10,\r\n  handleAzure10FileChange,\r\n  azure10Time,\r\n  uploads10,\r\n  uploadToAzure12,\r\n  handleAzure12FileChange,\r\n  azure12Time,\r\n  uploads12,\r\n  uploadsAws,\r\n  uploadToAws,\r\n  handleAwsFileChange,\r\n  awsTime,\r\n  filesUploadedWithRedux,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {/* <form onSubmit={uploadToAzure10}>\r\n      {azure10Time}\r\n        <input\r\n          onChange={handleAzure10FileChange}\r\n          className={classes.input}\r\n          name=\"files\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <Button color=\"secondary\" variant=\"contained\" type=\"submit\" className={classes.button}>\r\n          Upload To Azure 10\r\n        </Button>\r\n        {uploads10.map((upload10) => {\r\n          return (\r\n            <div key={upload10.link}>\r\n              <a href={upload10.link}>{upload10.name}</a>\r\n            </div>\r\n          );\r\n        })}\r\n      </form> */}\r\n\r\n      <form onSubmit={uploadToAzure12}>\r\n        {azure12Time}\r\n        <input\r\n          onChange={handleAzure12FileChange}\r\n          className={classes.input}\r\n          name=\"files\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <Button color=\"secondary\" variant=\"contained\" type=\"submit\" className={classes.button}>\r\n          Upload To Azure 12\r\n        </Button>\r\n        {filesUploadedWithRedux.map((upload12) => {\r\n          return (\r\n            <div key={upload12.file.name}>\r\n              {upload12.status} <a href={upload12.url || '#'}>{upload12.file.name}</a>\r\n            </div>\r\n          );\r\n        })}\r\n      </form>\r\n\r\n      {/*  <form onSubmit={uploadToAws}>\r\n      {awsTime}\r\n        <input\r\n          onChange={handleAwsFileChange}\r\n          className={classes.input}\r\n          name=\"files\"\r\n          multiple\r\n          type=\"file\"\r\n        />\r\n        <Button color=\"secondary\" variant=\"contained\" type=\"submit\" className={classes.button}>\r\n          Upload To Aws\r\n        </Button>\r\n        {uploadsAws.map((uploadAws) => {\r\n          return (\r\n            <div key={uploadAws.key}>\r\n              <a href={uploadAws.location}>{uploadAws.key}</a>\r\n            </div>\r\n          );\r\n        })}\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {};\r\n\r\nexport default withStyles(styles)(Home);\r\n","export default (theme) => ({\r\n  input: {\r\n    display: 'block',\r\n    width: 250,\r\n    backgroundColor: '#ffd6e3',\r\n  },\r\n  button: {\r\n    marginTop: 15,\r\n    marginBottom: 15,\r\n    color: 'white',\r\n  },\r\n});\r\n","import { createSelector } from 'reselect';\r\n\r\nexport const getUploadedFiles = (state) => state.home.homePage.uploadedFiles;\r\n","import React, { useState } from 'react';\r\nimport azure from 'azure-storage/browser/azure-storage.blob.export';\r\nimport { BlobServiceClient } from '@azure/storage-blob';\r\nimport ReactS3 from 'react-s3';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Home from '../components/Home';\r\nimport { uploadFiles } from '../actions';\r\nimport { getUploadedFiles } from '../selectors';\r\n\r\nconst AZURE_ACCOUNT = 'testtabeebblob';\r\nconst sas =\r\n  '?sv=2019-02-02&ss=b&srt=sco&sp=rwdlac&se=2020-06-08T18:01:44Z&st=2020-04-08T10:01:44Z&spr=https,http&sig=19%2BD2fnViaf0CRmEMRw4gHwpIsgKugpBPC7PfBA2sz4%3D';\r\n//azure 10\r\nconst blobService = azure.createBlobService(\r\n  AZURE_ACCOUNT,\r\n  '3R0ANZD7PesJGHXaSyQmDu/skzKy0W7FI3HjnQs21E4UJr310wD14yFtWakZMgaeJfMCevX0qjOC+eb62I53Ig==',\r\n);\r\n//azure 12\r\nconst blobServiceClient12 = new BlobServiceClient(\r\n  `https://${AZURE_ACCOUNT}.blob.core.windows.net${sas}`,\r\n);\r\n\r\n//aws\r\nexport const S3_CONFIG = {\r\n  bucketName: 'fusionmarkets',\r\n  dirName: 'idverification',\r\n  region: 'ap-southeast-2',\r\n  accessKeyId: 'AKIAJZNGEISFNO2OE3WQ',\r\n  secretAccessKey: '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',\r\n};\r\n\r\nconst HomeContainer = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const filesUploadedWithRedux = useSelector(getUploadedFiles);\r\n\r\n  const [azure10FilesToUpload, setAzure10FilesToApload] = useState([]);\r\n  const [azure10Time, setAzure10Time] = useState(0);\r\n  const [uploads10, setUploads10] = useState([]);\r\n  let interval1StartTime = 0;\r\n\r\n  const [azure12FilesToUpload, setAzure12FilesToApload] = useState([]);\r\n  const [azure12Time, setAzure12Time] = useState(0);\r\n  const [uploads12, setUploads12] = useState([]);\r\n  let interval2StartTime = 0;\r\n\r\n  const [awsFilesToUpload, setAwsFilesToApload] = useState([]);\r\n  const [awsTime, setAwsTime] = useState(0);\r\n  const [uploadsAws, setUploadsAws] = useState([]);\r\n  let intervalAwsStartTime = 0;\r\n\r\n  const uploadToAzure12 = (e) => {\r\n    e.preventDefault();\r\n    setAzure12Time(0);\r\n    interval2StartTime = Date.now();\r\n    const interval2 = setInterval(() => {\r\n      setAzure12Time((Date.now() - interval2StartTime) / 1000);\r\n    }, 500);\r\n    Array.from(azure12FilesToUpload).forEach((file) => {\r\n      const containerClient = blobServiceClient12.getContainerClient('testcontainer');\r\n      const blobName = file.name;\r\n      const blockBlobClient = containerClient.getBlockBlobClient(blobName);\r\n      console.log(file.name);\r\n      blockBlobClient\r\n        .uploadBrowserData(file)\r\n        .then((file) => {\r\n          console.log('uploaded', blobName);\r\n          setUploads12((uploads12) => {\r\n            const newUploads = [\r\n              ...uploads12,\r\n              {\r\n                ...blockBlobClient,\r\n                ...file,\r\n              },\r\n            ];\r\n            if (newUploads.length === Array.from(azure12FilesToUpload).length) {\r\n              clearInterval(interval2);\r\n              setAzure12FilesToApload([]);\r\n            }\r\n            return newUploads;\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          clearInterval(interval2);\r\n          setAzure12FilesToApload([]);\r\n        });\r\n    });\r\n  };\r\n\r\n  const uploadToAzure10 = (e) => {\r\n    e.preventDefault();\r\n    setAzure10Time(0);\r\n    interval1StartTime = Date.now();\r\n    const interval1 = setInterval(() => {\r\n      setAzure10Time((Date.now() - interval1StartTime) / 1000);\r\n    }, 500);\r\n    Array.from(azure10FilesToUpload).forEach((file) => {\r\n      console.log(file);\r\n      blobService.createBlockBlobFromBrowserFile('testcontainer', file.name, file, function(\r\n        error,\r\n        result,\r\n        response,\r\n      ) {\r\n        setUploads10((uploads10) => {\r\n          const newUploads = [\r\n            ...uploads10,\r\n            {\r\n              ...result,\r\n              link: `https://${AZURE_ACCOUNT}.blob.core.windows.net/${result.container}/${result.name}`,\r\n            },\r\n          ];\r\n          if (newUploads.length === Array.from(azure10FilesToUpload).length) {\r\n            clearInterval(interval1);\r\n            setAzure10FilesToApload([]);\r\n          }\r\n          return newUploads;\r\n        });\r\n        console.log(error, result, response);\r\n      });\r\n    });\r\n  };\r\n\r\n  const uploadToAws = (e) => {\r\n    e.preventDefault();\r\n    setAwsTime(0);\r\n    intervalAwsStartTime = Date.now();\r\n    const intervalAws = setInterval(() => {\r\n      setAwsTime((Date.now() - intervalAwsStartTime) / 1000);\r\n    }, 500);\r\n    for (const file of awsFilesToUpload) {\r\n      ReactS3.uploadFile(file, S3_CONFIG)\r\n        .then((result) => {\r\n          console.log(result);\r\n          setUploadsAws((uploads) => {\r\n            const newUploads = [...uploads, result];\r\n            if (newUploads.length === awsFilesToUpload.length) {\r\n              clearInterval(intervalAws);\r\n            }\r\n            return newUploads;\r\n          });\r\n        })\r\n        .catch((err) => console.error(err));\r\n    }\r\n  };\r\n\r\n  const handleAzure10FileChange = (e) => {\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n    setAzure10FilesToApload(e.target.files);\r\n  };\r\n\r\n  const handleAzure12FileChange = (e) => {\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n    dispatch(uploadFiles(Array.prototype.slice.call(e.target.files)));\r\n  };\r\n\r\n  const handleAwsFileChange = (e) => {\r\n    if (!e.target.files) {\r\n      return;\r\n    }\r\n    setAwsFilesToApload(e.target.files);\r\n  };\r\n\r\n  return (\r\n    <Home\r\n      uploadToAzure10={uploadToAzure10}\r\n      azure10Time={azure10Time}\r\n      handleAzure10FileChange={handleAzure10FileChange}\r\n      uploads10={uploads10}\r\n      uploadToAzure12={uploadToAzure12}\r\n      azure12Time={azure12Time}\r\n      handleAzure12FileChange={handleAzure12FileChange}\r\n      uploads12={uploads12}\r\n      uploadsAws={uploadsAws}\r\n      uploadToAws={uploadToAws}\r\n      handleAwsFileChange={handleAwsFileChange}\r\n      awsTime={awsTime}\r\n      filesUploadedWithRedux={filesUploadedWithRedux}\r\n    />\r\n  );\r\n};\r\n\r\nHomeContainer.propTypes = {};\r\n\r\nexport default HomeContainer;\r\n","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport { Routes } from './constants';\r\n\r\nimport Home from 'modules/home';\r\n\r\nconst AppRoutes = () => {\r\n  return (\r\n    <Switch>\r\n      <Route path={Routes.HOME} component={Home} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRoutes;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: { main: '#FF542E', dark: '#db4123' },\r\n    secondary: { main: '#C2D3FF' },\r\n    error: { main: '#bb0000' },\r\n    grey: { main: '#404656', secondary: '#9c9ea3', light: '#E2E2E2' },\r\n  },\r\n  typography: {\r\n    fontFamily: 'Montserrat',\r\n  },\r\n  MuiButton: {\r\n    fontFamily: 'Montserrat',\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from 'react';\r\nimport { persistStore } from 'redux-persist';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport Provider from 'react-redux/es/components/Provider';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport { configureStore, history } from 'configureStore';\r\nimport AppRoutes from 'navigation';\r\nimport theme from './theme';\r\n\r\nexport const store = configureStore();\r\nconst persistor = persistStore(store);\r\n\r\nconst App = () => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <PersistGate persistor={persistor}>\r\n          <ConnectedRouter history={history}>\r\n            <AppRoutes />\r\n          </ConnectedRouter>\r\n        </PersistGate>\r\n      </Provider>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}